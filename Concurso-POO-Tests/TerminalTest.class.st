Class {
	#name : #TerminalTest,
	#superclass : #TestCase,
	#category : #'Concurso-POO-Tests-Base'
}

{ #category : #'tests - class relationship' }
TerminalTest >> testAgregarEmpresa [

	| t e |
	t := Terminal new.
	e := Empresa new.
	e nombre: 'Transportes Rinc贸n'.
	t agregarEmpresa: e.
	self assert: (t empresas at: 1 ) nombre equals: 'Transportes Rinc贸n'
]

{ #category : #'test methods' }
TerminalTest >> testDarDatosViaje [

	| t e v d |
	t := Terminal new.
	e := Empresa new nombre: 'Transportes Rinc贸n'.
	d := 'Zapala'.
	v := Viaje conNumeroDestino: 1 destino: d.

	e agregarViaje: v.
	t agregarEmpresa: e.

	self
		assert: ((t darDatosViaje: 'Zapala') at: 1) first asString
		equals: 'Transportes Rinc贸n'
]

{ #category : #tests }
TerminalTest >> testTerminalIsSetAndRead [

	| c |
	c := Terminal new.
	c denominacion: 'CHM'.
	self assert: c denominacion equals: 'CHM'
]
